FROM ubuntu:16.04
RUN apt-get update && apt-get install -y python sudo dstat wget


RUN apt-get update && apt-get install -y tk-dev gcc gfortran libreadline-dev xorg-dev libxml2-dev libcurl4-gnutls-dev sqlite3

RUN cd /usr/local \
&& mkdir R \
&& wget  https://cran.r-project.org/src/base/R-2/R-2.15.3.tar.gz  \
&& tar zxvf R-2.15.3.tar.gz \
&& cd R-2.15.3/ \
&& ./configure \
&& make \
&& make check \
&& make install

RUN apt-get install -y aptitude texlive-latex-base
RUN aptitude install -y texlive-fonts-recommended texlive-latex-recommended texlive-latex-recommended-doc_ \
    texlive-pictures-doc_ texlive-latex-base-doc_ texlive-pstricks-doc_ texlive-latex-extra texlive-latex-extra-doc_ \
    texlive-fonts-recommended-doc_ 

RUN apt-get install -y software-properties-common

RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections  \
&&  add-apt-repository ppa:webupd8team/java \
&&  apt-get update \
&&  apt-get install -y oracle-java8-installer \
&&  apt-get install -y oracle-java8-set-default


# install a perl package
RUN cpan Array::Transpose

# install samtools and bwa to canonical locations, drop symlinks to keep scripts happy that reference hardcoded paths.
RUN apt-get install -y samtools bwa
RUN mkdir -p /seq/software/picard/current/3rd_party/bwa && echo '?.?.?' > /seq/software/picard/current/3rd_party/bwa/version.txt && ln -s /usr/bin/bwa /seq/software/picard/current/3rd_party/bwa/bwa
RUN mkdir -p /seq/software/picard/current/3rd_party/bwa_mem && echo '?.?.?' > /seq/software/picard/current/3rd_party/bwa_mem/version.txt && ln -s /usr/bin/bwa /seq/software/picard/current/3rd_party/bwa_mem/bwa
RUN mkdir -p /broad/software/groups/gtba/software/samtools_0.1.18/bin && ln -s /usr/bin/samtools /broad/software/groups/gtba/software/samtools_0.1.18/bin/samtools

RUN apt-get update && apt-get install -y gnuplot

#copy contents of tasks/<taskname>/build/src on the build host into /opt/src on the docker
COPY src/ /opt/src/

#unpack non-compiled 3rd party sw
#
# Created via
# tar cvPf read_qc_3p2.tar <list of directories>
# gzip --best read_qc_3p2.tar
# split -n 10 -d read_qc_3p2.tar.gz read_qc_3p2.tar.gz.partial.
# 
RUN cat /opt/src/read_qc_3p2.tar.gz.partial.* > /opt/src/read_qc_3p2.tar.gz && tar xvPf /opt/src/read_qc_3p2.tar.gz && rm /opt/src/read_qc_3p2.tar.gz*
ENV PYTHONPATH /gsap/assembly_analysis/gaemr-packages/GAEMR/
ENV GAEMR_HOME /gsap/assembly_analysis/gaemr-packages/GAEMR/
ENV GAEMR_VERSION 1.0.0
ENV GAEMR_LG_HOME /gsap/assembly_analysis/gaemr-packages/GAEMR-LG/
ENV GAEMR_LG_VERSION 1.0.0
ENV PATH="/gsap/assembly_analysis/gaemr-packages/GAEMR/bin:${PATH}"


#copy in scripts to run
#RUN mkdir -p /cil/shed/apps/internal/read_qc && cp /opt/src/read_qc_wrapper.pl /cil/shed/apps/internal/read_qc/read_qc_wrapper.pl
#RUN mkdir -p /cil/shed/sandboxes/tshea/BTL/read_qc && cp /opt/src/ssf_read_qc_setup.pl  /cil/shed/sandboxes/tshea/BTL/read_qc/ssf_read_qc_setup.pl


WORKDIR /opt/src
